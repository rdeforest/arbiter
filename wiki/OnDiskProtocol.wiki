#summary Meaning of files in data directory

= Introduction =

All communication into and out of [DefinitionModule Definitions] and
[DynamicModule Dynamics] is through the files under
{{{data/worlds/$world/state}}} and the output of the hooks provided by
the Definition and Dynamic modules.

The documentation for the hooks can be found under HookProtocol.

All paths in this document are relative to a world's base directory.

= Write Access =

The scripts under bin/ are the only writers.  This is not currently
enforced, but a mature implementation would probably do so both for
performance and management reasons.

= Canonical State =

The {{{state}}} directory contains state which has been provided or
vetted by Definitions.  In the Setup and Finalization 
[StatePhases phases] the {{{bin/run}}} script invokes the Definition
hooks, gathers their output (currently in YAML format) and commits it
to the current state directory.  If any Definitions attempt to
overwrite existing state it is an error and the run script should bail
out with a helpful error message.

== Discrete State Directories ==

World states are numbered with integers starting at 0.

State 0 is a special state which has had no input from Dynamics and
which is a good place to keep "constants" which describe the
relationships of the Definitions and Dynamics.  For example, in a
Prisoner's Dilemma game the definitions might provide names for the
"players" and those names would not be expected to change throught the
game.  Those names would be stored in state 0.

States 1 and up are generated by the StatePhases.

All state directories contain files and directories representing the
output of the Defintions.  The Definition output is YAML describing a
tree whose leaves are text.  See HookProtocol for details of the YAML
output expectations.  

The easiest way to explain the mapping from YAML to files and
directories is with an example.  Given the following YAML output:

{{{
    ---
    file1: contents of file1
    dir1:
      file2: contents of file2
}}}

The state directory in question would contain a file called 'file1'
containing "contents of file1" and a directory named 'dir1' containing
a file named 'file2' containin "contents of file2".

The names of the keys are not significant and are not cleaned of
shell meta-charachters.

== Useful Links ==

The {{{state}}} directory contains a symlink pointing to the root of
the current state so that hooks can reference {{{current/path}}} to
read the "path" key from the current state.

Every after 1 contains a symlink to its predecessor called
{{{previous}}}.

Every finished state contains a symlink to its successor called
{{{next}}}.

= Dynamic-Requested State =

During the Activity phase the run script calls the {{{query}}},
gathers their output and commits it to the {{{log}}} directory.  This
output cannot have conflicts because each Dynamic's output is placed
in a separate directory.  The Definitions are tasked with converting
this output into canonical state in the Finalization phase.

The only contents of the {{{log}}} directory are directories named for
the state they have been or will be incorporated into.  {{{state/1}}}
is the result of the current world's definitions processing the
contents of {{{log/1}}}.

Logged activity is not cleaned after processing, as keeping around
will be useful in debugging Definitions and Dynamics.

